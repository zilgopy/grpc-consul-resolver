// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.15.8
// source: grpc_kv_shared/shared.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_kv_shared_scratch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_kv_shared_scratch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_grpc_kv_shared_scratch_proto_rawDescGZIP(), []int{0}
}

func (x *Key) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_kv_shared_scratch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_kv_shared_scratch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_grpc_kv_shared_scratch_proto_rawDescGZIP(), []int{1}
}

func (x *Value) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Kvpair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Kvpair) Reset() {
	*x = Kvpair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_kv_shared_scratch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kvpair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kvpair) ProtoMessage() {}

func (x *Kvpair) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_kv_shared_scratch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kvpair.ProtoReflect.Descriptor instead.
func (*Kvpair) Descriptor() ([]byte, []int) {
	return file_grpc_kv_shared_scratch_proto_rawDescGZIP(), []int{2}
}

func (x *Kvpair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Kvpair) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_grpc_kv_shared_scratch_proto protoreflect.FileDescriptor

var file_grpc_kv_shared_scratch_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6b, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2f, 0x73, 0x63, 0x72, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x6b, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x17,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x06, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0xb6, 0x01, 0x0a, 0x08, 0x6b, 0x76, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x05, 0x67, 0x65, 0x74, 0x6b, 0x76, 0x12, 0x13,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6b, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x6b, 0x65, 0x79, 0x1a, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6b, 0x76, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x75,
	0x74, 0x6b, 0x76, 0x12, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6b, 0x76, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x1a, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x6b, 0x76,
	0x12, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6b, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x6b, 0x65, 0x79, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_kv_shared_scratch_proto_rawDescOnce sync.Once
	file_grpc_kv_shared_scratch_proto_rawDescData = file_grpc_kv_shared_scratch_proto_rawDesc
)

func file_grpc_kv_shared_scratch_proto_rawDescGZIP() []byte {
	file_grpc_kv_shared_scratch_proto_rawDescOnce.Do(func() {
		file_grpc_kv_shared_scratch_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_kv_shared_scratch_proto_rawDescData)
	})
	return file_grpc_kv_shared_scratch_proto_rawDescData
}

var file_grpc_kv_shared_scratch_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_grpc_kv_shared_scratch_proto_goTypes = []interface{}{
	(*Key)(nil),                  // 0: grpc_kv_shared.key
	(*Value)(nil),                // 1: grpc_kv_shared.value
	(*Kvpair)(nil),               // 2: grpc_kv_shared.kvpair
	(*wrapperspb.BoolValue)(nil), // 3: google.protobuf.BoolValue
}
var file_grpc_kv_shared_scratch_proto_depIdxs = []int32{
	0, // 0: grpc_kv_shared.kvserver.getkv:input_type -> grpc_kv_shared.key
	2, // 1: grpc_kv_shared.kvserver.putkv:input_type -> grpc_kv_shared.kvpair
	0, // 2: grpc_kv_shared.kvserver.delkv:input_type -> grpc_kv_shared.key
	1, // 3: grpc_kv_shared.kvserver.getkv:output_type -> grpc_kv_shared.value
	3, // 4: grpc_kv_shared.kvserver.putkv:output_type -> google.protobuf.BoolValue
	3, // 5: grpc_kv_shared.kvserver.delkv:output_type -> google.protobuf.BoolValue
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_grpc_kv_shared_scratch_proto_init() }
func file_grpc_kv_shared_scratch_proto_init() {
	if File_grpc_kv_shared_scratch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_kv_shared_scratch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_kv_shared_scratch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_kv_shared_scratch_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kvpair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_kv_shared_scratch_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_kv_shared_scratch_proto_goTypes,
		DependencyIndexes: file_grpc_kv_shared_scratch_proto_depIdxs,
		MessageInfos:      file_grpc_kv_shared_scratch_proto_msgTypes,
	}.Build()
	File_grpc_kv_shared_scratch_proto = out.File
	file_grpc_kv_shared_scratch_proto_rawDesc = nil
	file_grpc_kv_shared_scratch_proto_goTypes = nil
	file_grpc_kv_shared_scratch_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KvserverClient is the client API for Kvserver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KvserverClient interface {
	Getkv(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Value, error)
	Putkv(ctx context.Context, in *Kvpair, opts ...grpc.CallOption) (*wrapperspb.BoolValue, error)
	Delkv(ctx context.Context, in *Key, opts ...grpc.CallOption) (*wrapperspb.BoolValue, error)
}

type kvserverClient struct {
	cc grpc.ClientConnInterface
}

func NewKvserverClient(cc grpc.ClientConnInterface) KvserverClient {
	return &kvserverClient{cc}
}

func (c *kvserverClient) Getkv(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Value, error) {
	out := new(Value)
	err := c.cc.Invoke(ctx, "/grpc_kv_shared.kvserver/getkv", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvserverClient) Putkv(ctx context.Context, in *Kvpair, opts ...grpc.CallOption) (*wrapperspb.BoolValue, error) {
	out := new(wrapperspb.BoolValue)
	err := c.cc.Invoke(ctx, "/grpc_kv_shared.kvserver/putkv", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvserverClient) Delkv(ctx context.Context, in *Key, opts ...grpc.CallOption) (*wrapperspb.BoolValue, error) {
	out := new(wrapperspb.BoolValue)
	err := c.cc.Invoke(ctx, "/grpc_kv_shared.kvserver/delkv", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KvserverServer is the server API for Kvserver service.
type KvserverServer interface {
	Getkv(context.Context, *Key) (*Value, error)
	Putkv(context.Context, *Kvpair) (*wrapperspb.BoolValue, error)
	Delkv(context.Context, *Key) (*wrapperspb.BoolValue, error)
}

// UnimplementedKvserverServer can be embedded to have forward compatible implementations.
type UnimplementedKvserverServer struct {
}

func (*UnimplementedKvserverServer) Getkv(context.Context, *Key) (*Value, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Getkv not implemented")
}
func (*UnimplementedKvserverServer) Putkv(context.Context, *Kvpair) (*wrapperspb.BoolValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Putkv not implemented")
}
func (*UnimplementedKvserverServer) Delkv(context.Context, *Key) (*wrapperspb.BoolValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delkv not implemented")
}

func RegisterKvserverServer(s *grpc.Server, srv KvserverServer) {
	s.RegisterService(&_Kvserver_serviceDesc, srv)
}

func _Kvserver_Getkv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Key)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvserverServer).Getkv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_kv_shared.kvserver/Getkv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvserverServer).Getkv(ctx, req.(*Key))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvserver_Putkv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Kvpair)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvserverServer).Putkv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_kv_shared.kvserver/Putkv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvserverServer).Putkv(ctx, req.(*Kvpair))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvserver_Delkv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Key)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvserverServer).Delkv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_kv_shared.kvserver/Delkv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvserverServer).Delkv(ctx, req.(*Key))
	}
	return interceptor(ctx, in, info, handler)
}

var _Kvserver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc_kv_shared.kvserver",
	HandlerType: (*KvserverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getkv",
			Handler:    _Kvserver_Getkv_Handler,
		},
		{
			MethodName: "putkv",
			Handler:    _Kvserver_Putkv_Handler,
		},
		{
			MethodName: "delkv",
			Handler:    _Kvserver_Delkv_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc_kv_shared/shared.proto",
}
